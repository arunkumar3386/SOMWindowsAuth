@model StarOfTheMonth.Models.DashboardModel
@{
    ViewData["Title"] = "Evaluation List";
}
<div class="container py-3 bg-white">
    <div class="b-radius-5 py-3 px-4">
        @*<div class="border-nomination-list b-radius-5 py-3 px-4">*@
        <div class="clearfix mb-4">
            <div class="float-left">
                <h4 id="dashboardHeading"><i class="fas fa-list-ol"></i>&nbsp;&nbsp;Pending Evaluation List</h4>
            </div>
            @*<div class="float-right">
                    <button type="button" class="btn btn-outline-excel ml-2"><span class="text-color">Save as Excel</span>&nbsp;&nbsp;&nbsp;<i class="fas fa-file-excel"></i></button>
                </div>*@
        </div>
        <div>
            <div class="clearfix">
                <div class="float-right">
                    <button type="button" class="btn btn-outline-filter ml-2 mb-2" data-toggle="collapse" data-target="#filterBox" aria-expanded="false"
                            aria-controls="filterBox">
                        <span class="text-color"></span>Filter &nbsp;&nbsp;&nbsp;<i class="fas fa-filter"></i>
                    </button>
                </div>
            </div>
            <div class="collapse" id="filterBox" style="margin:20px;">
                <div class="mb-3 mt-2 mx-0 py-2 row bg-light b-radius-5 border">
                    <div class="col">
                        <div class="form-group required row NomSection">
                            <label for="DeptFilter" class="col-sm-2 col-form-label control-label"> Department: </label>
                            <div class="col-sm-2">
                                @Html.DropDownListFor(m => m.Eval_DeptFilter, Model.DeptFilterlst, new { @class = "form-control", @id = "Eval_DeptFilter" })
                            </div>
                            <label for="From_date" class="col-sm-1 col-form-label control-label">From:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(m => m.From_Date, new { @class = "form-control date-picker", @id = "From_Date" })
                            </div>
                            <label for="TO_date" class="col-sm-1 col-form-label control-label">To:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(m => m.To_Date, new { @class = "form-control date-picker", @id = "To_Date" })
                            </div>
                            <div class="col-sm-2">
                                <button type="button" id="btnEvalFilter" class="btn btn-outline-filter ml-2 mb-2" data-toggle="collapse">Apply</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div id="tblEvaluation" style="display:none;">
            <div class="table-responsive">
                <div class="table-responsive">
                    <table id="EvaluationGrid" class="table table-striped table-hover table-bordered dataTable" width="100%" cellspacing="0">
                        <thead>
                            <tr class="table-head-brand text-center top-table-head" style="vertical-align:middle;">
                                <th scope="col" rowspan="2" style="vertical-align:middle;">Action</th>
                                <th scope="col" rowspan="2" style="vertical-align:middle;">S.No.</th>
                                @*<th scope="col" rowspan="2">NominationIdentity</th>*@
                                <th scope="col" rowspan="2" class="sorting" style="vertical-align:middle;">Emp. No.</th>
                                <th scope="col" rowspan="2" style="vertical-align:middle;">EvaluatorID</th>
                                <th scope="col" rowspan="2" style="vertical-align:middle;">NominationID</th>
                                <th scope="col" rowspan="2" class="sorting" style="vertical-align:middle;">Score (%)</th>
                                <th scope="col" rowspan="2" class="sorting" style="vertical-align:middle;">Name</th>
                                <th scope="col" rowspan="2" class="sorting" style="vertical-align:middle;">Department</th>
                                <th scope="col" rowspan="2" style="vertical-align:middle;">Summary of achievement</th>
                                <th scope="col" colspan="3" style="vertical-align:middle;">Self initiative</th>
                                <th scope="col" colspan="3" style="vertical-align:middle;">Speed, meeting time targets, Plan Vs Actual etc.</th>
                                <th scope="col" colspan="3" style="vertical-align:middle;">Individuals contribution in implementation</th>
                                <th scope="col" colspan="3" style="vertical-align:middle;">Team Effort</th>
                                <th scope="col" colspan="3" style="vertical-align:middle;">Extent of improvement - QCDD</th>
                                <th scope="col" colspan="3" style="vertical-align:middle;">Horizontal Deployment</th>

                            </tr>
                            <tr class="table-head-brand text-center">
                                <th scope="col" style="vertical-align:middle;">Reactive; Idea driven by situation</th>
                                <th scope="col" style="vertical-align:middle;">Based on instruction</th>
                                <th scope="col" style="vertical-align:middle;">Proactive; Idea generated by self</th>
                                <th scope="col" style="vertical-align:middle;">Delayed</th>
                                <th scope="col" style="vertical-align:middle;">As per plan</th>
                                <th scope="col" style="vertical-align:middle;">Ahead of plan</th>
                                <th scope="col" style="vertical-align:middle;">Followed up</th>
                                <th scope="col" style="vertical-align:middle;">Participated</th>
                                <th scope="col" style="vertical-align:middle;">Implemented</th>
                                <th scope="col" style="vertical-align:middle;">Coordiantion within the dept</th>
                                <th scope="col" style="vertical-align:middle;">Coordination with another function </th>
                                <th scope="col" style="vertical-align:middle;">Coordination with multiple functions</th>
                                <th scope="col" style="vertical-align:middle;">Prevention of a failure</th>
                                <th scope="col" style="vertical-align:middle;">Improvement from current situation</th>
                                <th scope="col" style="vertical-align:middle;">Breakthrough improvement</th>
                                <th scope="col" style="vertical-align:middle;">Scope identified</th>
                                <th scope="col" style="vertical-align:middle;">Implemented partially</th>
                                <th scope="col" style="vertical-align:middle;">Implemented in all applicable areas</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>Action</th>
                                <th>ID</th>
                                @*<th>NominationIdentity</th>*@
                                <th>EmployeeNumber</th>
                                <th>EvaluatorID</th>
                                <th>NominationID</th>
                                <th>TotalScore</th>
                                <th>Name</th>
                                <th>Department</th>
                                <th>SummaryOfAchievement</th>
                                <th>ReactiveIdeaDrivenBySituation</th>
                                <th>BasedOnInstruction</th>
                                <th>ProactiveIdeaGeneratedBySelf</th>
                                <th>Delayed</th>
                                <th>AsPerPlan</th>
                                <th>AheadOfPlan</th>

                                <th>FollowedUp</th>
                                <th>Participated</th>
                                <th>Implemented</th>
                                <th>CoordiantionWithInTheDept</th>
                                <th>CoordinationWithAnotherFunction</th>
                                <th>CoordinationWithMultipleFunctions</th>
                                <th>PreventionOfaFailure</th>
                                <th>ImprovementFromCurrentSituation</th>
                                <th>BreakthroughImprovement</th>
                                <th>ScopeIdentified</th>
                                <th>ImplementedPartially</th>
                                <th>ImplementedInAllApplicableAreas</th>

                            </tr>
                        </tfoot>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<a href="#" style="display:none;" id="popUp" data-toggle="modal" data-target="#exampleModal">Edit values</a>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-brand" id="exampleModalLabel">Edit Values</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="EvaluationPopup">
                @{Html.RenderPartial("_MessageDiv");}
                @Html.HiddenFor(m => m.EvaluatorName, new { @id = "EvaluatorName" })
                @Html.HiddenFor(m => m.EvaluatorNumber, new { @id = "EvaluatorNumber" })
                @Html.HiddenFor(m => m.evaluationModel.ID, new { @id = "evaluationId" })
                @Html.HiddenFor(m => m.evaluationModel.EmployeeNumber, new { @id = "EmployeeNumber" })
                @Html.HiddenFor(m => m.evaluationModel.EvaluatorID, new { @id = "EvaluatorID" })
                @Html.HiddenFor(m => m.evaluationModel.NominationID, new { @id = "NominationID" })
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row font-weight-bold">
                            <div class="col-md-8 my-2">Self initiative</div>
                            <div class="col-md-2 ml-auto my-2">20%</div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 my-3">Reactive; Idea driven by situation</div>
                            <div class="col-md-2 my-3 text-center">(0-3)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.ReactiveIdeaDrivenBySituation, new
                         {
                             @class = "form-control range13 calTotal",
                             @maxlength = "1",
                             onkeydown = "return ValidateNumber0_3(event);",
                             @id = "ReactiveIdeaDrivenBySituation"
                         })
                            </div>
                            <div class="col-md-8 my-3">Based on instruction</div>
                            <div class="col-md-2 my-3 text-center">(4-7)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.BasedOnInstruction, new
{
    @class = "form-control calTotal",
    @maxlength = "1",
    onkeydown = "return ValidateNumber4_7(event);",
    @id = "BasedOnInstruction"
})
                            </div>
                            <div class="col-md-8 my-3">Proactive; idea generated by self</div>
                            <div class="col-md-2 my-3 text-center">(8-10)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.ProactiveIdeaGeneratedBySelf, new
                         {
                             @class = "form-control calTotal",
                             @maxlength = "2",
                             onkeydown = "return ValidateNumber8_10(event);",
                             @id = "ProactiveIdeaGeneratedBySelf"
                         })
                            </div>
                        </div>
                        <br>
                        <div class="row font-weight-bold">
                            <div class="col-md-8 my-2">Speed, meeting time targets, Plan Vs Actual etc.</div>
                            <div class="col-md-2 ml-auto my-2">15%</div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 my-3">Delayed</div>
                            <div class="col-md-2 my-3 text-center">(0-3)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.Delayed, new
{
    @class = "form-control range13 calTotal",
    @maxlength = "1",
    onkeydown = "return ValidateNumber0_3(event);",
    @id = "Delayed"
})
                            </div>
                            <div class="col-md-8 my-3">As per plan</div>
                            <div class="col-md-2 my-3 text-center">(4-7)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.AsPerPlan, new
{
   @class = "form-control calTotal",
   @maxlength = "1",
   onkeydown = "return ValidateNumber4_7(event);",
   @id = "AsPerPlan"
})
                            </div>
                            <div class="col-md-8 my-3">Ahead of plan</div>
                            <div class="col-md-2 my-3 text-center">(8-10)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.AheadOfPlan, new
{
    @class = "form-control calTotal",
    @maxlength = "2",
    onkeydown = "return ValidateNumber8_10(event);",
    @id = "AheadOfPlan"
})
                            </div>
                        </div>
                        <br>
                        <div class="row font-weight-bold">
                            <div class="col-md-8 my-2">Individuals contribution in implementation</div>
                            <div class="col-md-2 ml-auto my-2">20%</div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 my-3">Followed up</div>
                            <div class="col-md-2 my-3 text-center">(0-3)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.FollowedUp, new
{
    @class = "form-control range13 calTotal",
    @maxlength = "1",
    onkeydown = "return ValidateNumber0_3(event);",
    @id = "FollowedUp"
})
                            </div>
                            <div class="col-md-8 my-3">Participated</div>
                            <div class="col-md-2 my-3 text-center">(4-7)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.Participated, new
{
    @class = "form-control calTotal",
    @maxlength = "1",
    onkeydown = "return ValidateNumber4_7(event);",
    @id = "Participated"
})
                            </div>
                            <div class="col-md-8 my-3">Implemented</div>
                            <div class="col-md-2 my-3 text-center">(8-10)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.Implemented, new
{
   @class = "form-control calTotal",
   @maxlength = "2",
   onkeydown = "return ValidateNumber8_10(event);",
   @id = "Implemented"
})
                            </div>
                        </div>
                        <br>
                        <div class="row font-weight-bold">
                            <div class="col-md-8 my-2">Team Effort</div>
                            <div class="col-md-2 ml-auto my-2">15%</div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 my-3">Coordiantion within the dept</div>
                            <div class="col-md-2 my-3 text-center">(0-3)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.CoordiantionWithInTheDept, new
{
   @class = "form-control range13 calTotal",
   @maxlength = "1",
   onkeydown = "return ValidateNumber0_3(event);",
   @id = "CoordiantionWithInTheDept"
})
                            </div>
                            <div class="col-md-8 my-3">Coordination with another function</div>
                            <div class="col-md-2 my-3 text-center">(4-7)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.CoordinationWithAnotherFunction, new
{
  @class = "form-control calTotal",
  @maxlength = "1",
  onkeydown = "return ValidateNumber4_7(event);",
  @id = "CoordinationWithAnotherFunction"
})
                            </div>
                            <div class="col-md-8 my-3">Coordination with multiple functions</div>
                            <div class="col-md-2 my-3 text-center">(8-10)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.CoordinationWithMultipleFunctions, new
{
    @class = "form-control calTotal",
    @maxlength = "2",
    onkeydown = "return ValidateNumber8_10(event);",
    @id = "CoordinationWithMultipleFunctions"
})
                            </div>
                        </div>
                        <br>
                        <div class="row font-weight-bold">
                            <div class="col-md-8 my-2">Extent of improvement - QCDD</div>
                            <div class="col-md-2 ml-auto my-2">20%</div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 my-3">Prevention of a failure</div>
                            <div class="col-md-2 my-3 text-center">(0-3)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.PreventionOfaFailure, new
{
@class = "form-control range13 calTotal",
@maxlength = "1",
onkeydown = "return ValidateNumber0_3(event);",
@id = "PreventionOfaFailure"
})
                            </div>
                            <div class="col-md-8 my-3">Improvement from current situation</div>
                            <div class="col-md-2 my-3 text-center">(4-7)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.ImprovementFromCurrentSituation, new
{
    @class = "form-control calTotal",
    @maxlength = "1",
    onkeydown = "return ValidateNumber4_7(event);",
    @id = "ImprovementFromCurrentSituation"
})
                            </div>
                            <div class="col-md-8 my-3">Breakthrough improvement</div>
                            <div class="col-md-2 my-3 text-center">(8-10)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.BreakthroughImprovement, new
{
 @class = "form-control calTotal",
 @maxlength = "2",
 onkeydown = "return ValidateNumber8_10(event);",
 @id = "BreakthroughImprovement"
})
                            </div>
                        </div>
                        <br>
                        <div class="row font-weight-bold">
                            <div class="col-md-8 my-2">Horizontal Deployment</div>
                            <div class="col-md-2 ml-auto my-2">10%</div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 my-3">Scope identified</div>
                            <div class="col-md-2 my-3 text-center">(0-3)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.ScopeIdentified, new
{
    @class = "form-control range13 calTotal",
    @maxlength = "1",
    onkeydown = "return ValidateNumber0_3(event);",
    @id = "ScopeIdentified"
})
                            </div>
                            <div class="col-md-8 my-3">Implemented partially</div>
                            <div class="col-md-2 my-3 text-center">(4-7)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.ImplementedPartially, new
                         {
                             @class = "form-control calTotal",
                             @maxlength = "1",
                             onkeydown = "return ValidateNumber4_7(event);",
                             @id = "ImplementedPartially"
                         })
                            </div>
                            <div class="col-md-8 my-3">Implemented in all applicable areas</div>
                            <div class="col-md-2 my-3 text-center">(8-10)</div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.evaluationModel.ImplementedInAllApplicableAreas, new
{
   @class = "form-control calTotal",
   @maxlength = "2",
   onkeydown = "return ValidateNumber8_10(event);",
   @id = "ImplementedInAllApplicableAreas"
})
                            </div>
                        </div>
                        <br>
                        <div class="row font-weight-bold text-brand">
                            <h4 class="col-md-8 my-2">Total</h4>
                            <div class="col-md-1 text-right my-1" style="line-height: 2.5;">(%)</div>
                            <div class="col-md-3 ml-auto my-3">
                                @Html.TextBoxFor(m => m.evaluationModel.TotalScore, new
                               {
                                   @class = "form-control", @id = "totalScr",
                                   @readonly = "readonly"//,
                                   //@disabled = "disabled"
                               })
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            @*<div class="modal-footer" id="modalFooter">
                <button type="button" class="btn btn-outline-cancel text-brand" data-dismiss="modal">
                    <span class="text-color">Cancel</span>&nbsp;&nbsp;&nbsp;<i class="fas fa-times"></i>
                </button>
                <button type="button" class="btn btn-outline-save text-brand" id="btnEvalSave">
                    <span class="text-color">Save</span> &nbsp;&nbsp;&nbsp;<i class="fas fa-save"></i>
                </button>
                <button type="button" class="btn btn-outline-submit text-brand" id="btnEvalSubmit">
                    <span class="text-color">Submit TQC</span> &nbsp;&nbsp;&nbsp;<i class="fas fa-save"></i>
                </button>
            </div>*@
        </div>
    </div>
</div>

<input id="btnEvaluationGridDetGrid" value="Load" type="hidden" data-url='@Url.Action("LoadAllEvaluationDetailsForGrid","Evaluation")' />
<input id="btnEvaluationPopup" value="Load" type="hidden" data-url='@Url.Action("EvaluationPopupValues","Evaluation")' />
<input id="btnSaveEvaluation" value="Load" type="hidden" data-url='@Url.Action("EvaluationPopupSave","Evaluation")' />
<input id="btnSubmitEvaluation" value="Load" type="hidden" data-url='@Url.Action("EvaluationPopupSubmit","Evaluation")' />
@section Scripts {
    <script>

        $(function () {
            $('.date-picker').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'MM yy',
                onClose: function (dateText, inst) {
                    $(this).datepicker('setDate', new Date(inst.selectedYear, inst.selectedMonth, 1));
                }
            });
        });

        $(document).ready(function () {
            $("#pageTitle").text("Evaluation Details");
            LoadEvaluationGrid();
        });

        $(".calTotal").change(function () {
            CalculateTotal();
        });

        function CalculateTotal() {
            console.log("total");
            //console.log(isNaN(parseInt($("#ReactiveIdeaDrivenBySituation").val())) ? 0 : parseInt($("#ReactiveIdeaDrivenBySituation").val()));
            //console.log(isNaN(parseInt($("#BasedOnInstruction").val())) ? 0 : parseInt($("#BasedOnInstruction").val()));
            //console.log(isNaN(parseInt($("#Delayed").val())) ? 0 : parseInt($("#Delayed").val()));

            var a1 = isNaN(parseInt($("#ReactiveIdeaDrivenBySituation").val())) ? 0 : parseInt($("#ReactiveIdeaDrivenBySituation").val());
            var a2 = isNaN(parseInt($("#BasedOnInstruction").val())) ? 0 : parseInt($("#BasedOnInstruction").val());
            var a3 = isNaN(parseInt($("#ProactiveIdeaGeneratedBySelf").val())) ? 0 : parseInt($("#ProactiveIdeaGeneratedBySelf").val());

            var a4 = isNaN(parseInt($("#Delayed").val())) ? 0 : parseInt($("#Delayed").val());
            var a5 = isNaN(parseInt($("#AsPerPlan").val())) ? 0 : parseInt($("#AsPerPlan").val());
            var a6 = isNaN(parseInt($("#AheadOfPlan").val())) ? 0 : parseInt($("#AheadOfPlan").val());

            var a7 = isNaN(parseInt($("#FollowedUp").val())) ? 0 : parseInt($("#FollowedUp").val());
            var a8 = isNaN(parseInt($("#Participated").val())) ? 0 : parseInt($("#Participated").val());
            var a9 = isNaN(parseInt($("#Implemented").val())) ? 0 : parseInt($("#Implemented").val());

            var a10 = isNaN(parseInt($("#CoordiantionWithInTheDept").val())) ? 0 : parseInt($("#CoordiantionWithInTheDept").val());
            var a11 = isNaN(parseInt($("#CoordinationWithAnotherFunction").val())) ? 0 : parseInt($("#CoordinationWithAnotherFunction").val());
            var a12 = isNaN(parseInt($("#CoordinationWithMultipleFunctions").val())) ? 0 : parseInt($("#CoordinationWithMultipleFunctions").val());

            var a13 = isNaN(parseInt($("#PreventionOfaFailure").val())) ? 0 : parseInt($("#PreventionOfaFailure").val());
            var a14 = isNaN(parseInt($("#ImprovementFromCurrentSituation").val())) ? 0 : parseInt($("#ImprovementFromCurrentSituation").val());
            var a15 = isNaN(parseInt($("#BreakthroughImprovement").val())) ? 0 : parseInt($("#BreakthroughImprovement").val());

            var a16 = isNaN(parseInt($("#ScopeIdentified").val())) ? 0 : parseInt($("#ScopeIdentified").val());
            var a17 = isNaN(parseInt($("#ImplementedPartially").val())) ? 0 : parseInt($("#ImplementedPartially").val());
            var a18 = isNaN(parseInt($("#ImplementedInAllApplicableAreas").val())) ? 0 : parseInt($("#ImplementedInAllApplicableAreas").val());

            console.log(a1 + a2 + a3);
            console.log("total1");

            var total =
                a1 + a2 + a3 +
                a4 + a5 + a6 +
                a7 + a8 + a9 +
                a10 + a11 + a12 +
                a13 + a14 + a15 +
                a16 + a17 + a18;

            console.log(total);
            var _val = Math.round((total / 120) * 100).toFixed(0);
            $("#totalScr").val(_val)
        }

        $("#btnEvalFilter").click(function () {
            LoadEvaluationGrid()
            var E_dept = $("#Eval_DeptFilter option:selected").text();
            var E_date = $("#Eval_dateFilter").val();
            console.log(E_dept + " " + E_date);
        });

        function LoadEvaluationGrid() {
            spinner_On();
            var E_dept = $("#Eval_DeptFilter option:selected").text();
            var E_date = $("#Eval_dateFilter").val();
            $.ajax(
                {
                    "url": $("#btnEvaluationGridDetGrid").data('url'),
                    "type": "POST",
                    "data": { dept: E_dept, date: E_date },
                    "dataType": "json",
                    success: function (data) {
                        //console.log(data);
                        $('#tblEvaluation').show();
                        var datatableInstance = $('#EvaluationGrid').DataTable({
                            data: data,
                            paging: true,
                            bDestroy: true,
                            processing: true,
                            pageLength: 15,
                            order: [],

                            dom: 'Bfrtip',
                            buttons: [
                                {
                                    extend: 'excelHtml5',
                                    text: 'Export As Excel',
                                    title: 'Evaluation Details',
                                    exportOptions: {
                                        columns: [1, 2, 3, 4, 5, 6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],
                                        //}
                                        format: {
                                            body: function (data, row, column, node) {
                                                switch (column) {
                                                    case 51:
                                                        return moment(data, 'DD.MM.YYYY').format('DD/MM/YYYY')
                                                        break
                                                    case 61:
                                                        return moment(data, 'DD.MM.YYYY').format('DD/MM/YYYY')
                                                        break
                                                    default:
                                                        return data
                                                        break
                                                }
                                            }
                                        }
                                    }
                                }
                                //'copy', 'csv', 'excel', 'pdf'
                            ],

                            columns: [
                                {
                                    'data': '',
                                    'sortable': false,
                                    'render': function json(data, type, full, meta) {
                                        return "<i onclick='showEvaPopup(" + full.ID + "," + full.NominationID + "," + full.EmployeeNumber + ")' class='fas fa-edit' style='cursor:pointer;'></i>";
                                    }
                                },
                                { 'data': 'ID', "visible": false, },
                                //{ 'data': 'NominationIdentity', "visible": false, },
                                { 'data': 'EmployeeNumber' },
                                { 'data': 'EvaluatorID', "visible": false, },

                                {
                                    'data': 'NominationID',
                                    'sortable': false,
                                    'render': function json(data, type, full, meta) {
                                        return "<a style='cursor:pointer;color:#0052ee;text-decoration:underline;' onclick='Clickfn(" + full.NominationIdentity + ")'><i>" + full.NominationID+"</i></a>";
                                    }
                                },
                                { 'data': 'TotalScore' },
                                //{ 'data': 'NominationID' },
                                { 'data': 'Name' },
                                { 'data': 'Department' },
                                { 'data': 'SummaryOfAchievement' },

                                { 'data': 'ReactiveIdeaDrivenBySituation' },
                                { 'data': 'BasedOnInstruction' },
                                { 'data': 'ProactiveIdeaGeneratedBySelf' },

                                { 'data': 'Delayed' },
                                { 'data': 'AsPerPlan' },
                                { 'data': 'AheadOfPlan' },

                                { 'data': 'FollowedUp' },
                                { 'data': 'Participated' },
                                { 'data': 'Implemented' },

                                { 'data': 'CoordiantionWithInTheDept' },
                                { 'data': 'CoordinationWithAnotherFunction' },
                                { 'data': 'CoordinationWithMultipleFunctions' },

                                { 'data': 'PreventionOfaFailure' },
                                { 'data': 'ImprovementFromCurrentSituation' },
                                { 'data': 'BreakthroughImprovement' },

                                { 'data': 'ScopeIdentified' },
                                { 'data': 'ImplementedPartially' },
                                { 'data': 'ImplementedInAllApplicableAreas' },



                            ]
                        });

                        // To decide it's textbox or Select Filter
                        $("#EvaluationGrid tfoot th").each(function (i) {
                            var title = $('#EvaluationGrid thead th').eq($(this).index()).text();
                            if (title == "Emp.No." || title == "Name" || title == "Department" || title =="NominationID") {
                                //$(this).html('<div class="search"><input type="text" class="form-control" placeholder="Search ' + title + '"></div>');
                                $(this).html('<div class="search"><input type="text" class="form-control" placeholder="Search"></div>');
                            }
                            //else if (title == "Sl.No") {
                            //    $(this).html("");
                            //}
                            else {
                                //$(this).html('<input type="button" class="btn btn-primary" value="Clear" onclick="clearSearch4Evaluation()"/>');
                                $(this).html("");
                            }
                        });

                        // Filter : Textbox keyup Action...
                        datatableInstance.columns().every(function () {
                            var dataTableColumn = this;
                            $(this.footer()).find('input').on('keyup change', function () {
                                //console.log(this.value);
                                dataTableColumn.search(this.value).draw();
                            });
                        });
                        spinner_Off();
                    },
                    error: function (json) {
                        spinner_Off();
                    }
                });
        }

        function clearSearch4Evaluation() {
            var table = $("#Evaluationrid").DataTable();
            table.search('').columns().search('').draw();
            $(".search input[type='text']").val("");
        }

        $("#dialog").dialog({
            autoOpen: false,
            modal: true,
            title: "Edit Evaluation Value",
            height: 774,
            width: 800
        });

        function showEvaPopup(ID, nomID, empNum) {
            $.ajax({
                type: "Post",
                url: $("#btnEvaluationPopup").data('url'),
                //data: '{ID: ' + ID + ',nominationID ' + nomID + ',empNum' + empNum + '}',
                data: '{ID: ' + ID + ' }',
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    $("#popUp").trigger("click");
                    console.log(response.data);
                    //$('#dialog').html(response);
                    //$('#dialog').dialog('open');
                    //$('#evaluationId').val(1);

                    $('#EvaluatorName').val("sdsd");
                    $('#EvaluatorNumber').val(empNum);

                    $('#EmployeeNumber').val(empNum);
                    $('#NominationID').val(nomID);

                    $('#evaluationId').val(response.data.ID);
                    $('#ReactiveIdeaDrivenBySituation').val(response.data.ReactiveIdeaDrivenBySituation);
                    $('#BasedOnInstruction').val(response.data.BasedOnInstruction);
                    $('#ProactiveIdeaGeneratedBySelf').val(response.data.ProactiveIdeaGeneratedBySelf);

                    $('#Delayed').val(response.data.Delayed);
                    $('#AsPerPlan').val(response.data.AsPerPlan);
                    $('#AheadOfPlan').val(response.data.AheadOfPlan);

                    $('#FollowedUp').val(response.data.FollowedUp);
                    $('#Participated').val(response.data.Participated);
                    $('#Implemented').val(response.data.Implemented);

                    $('#CoordiantionWithInTheDept').val(response.data.CoordiantionWithInTheDept);
                    $('#CoordinationWithAnotherFunction').val(response.data.CoordinationWithAnotherFunction);
                    $('#CoordinationWithMultipleFunctions').val(response.data.CoordinationWithMultipleFunctions);

                    $('#PreventionOfaFailure').val(response.data.PreventionOfaFailure);
                    $('#ImprovementFromCurrentSituation').val(response.data.ImprovementFromCurrentSituation);
                    $('#BreakthroughImprovement').val(response.data.BreakthroughImprovement);

                    $('#ScopeIdentified').val(response.data.ScopeIdentified);
                    $('#ImplementedPartially').val(response.data.ImplementedPartially);
                    $('#ImplementedInAllApplicableAreas').val(response.data.ImplementedInAllApplicableAreas);

                    $('#totalScr').val(response.data.TotalScore);

                    $('#totalScr').attr('readonly', 'readonly');
                    $('#totalScr').addClass('input-disabled');


                    $('.calTotal').attr('readonly', 'readonly');
                    $('.calTotal').addClass('input-disabled');

                    $("#modalFooter").hide();

                    //if (response.data.Status == "2007") {

                    //    $('.calTotal').attr('readonly', 'readonly');
                    //    $('.calTotal').addClass('input-disabled');

                    //    //$('#totalScr').attr('readonly', 'readonly');
                    //    //$('#totalScr').addClass('input-disabled');
                    //    $("#modalFooter").hide();
                    //}
                    //else {
                    //    $('.calTotal').removeAttr('readonly', 'readonly');
                    //    $('.calTotal').removeClass('input-disabled');

                    //    //$('#totalScr').removeAttr('readonly', 'readonly');
                    //    //$('#totalScr').removeClass('input-disabled');
                    //    $("#modalFooter").show();
                    //}


                },
                failure: function (response) {
                    alertify.alert(response.responseText);
                },
                error: function (response) {
                    alertify.alert(response.responseText);
                }
            });
        }

        function ValidateNumber0_3(e) {
            var val = e.key;
            console.log(val);
            if (val == 0 || val == 1 || val == 2 || val == 3 || val == 'Backspace' || val == 'Delete' || val == 'Tab') {
                return true;
            }
            return false;
        };

        function ValidateNumber4_7(e) {
            var val = e.key;
            console.log(val);
            if (val == 4 || val == 5 || val == 6 || val == 7 || val == 'Backspace' || val == 'Delete' || val == 'Tab') {
                return true;
            }
            return false;
        };

        function ValidateNumber8_10(e) {
            var val = e.key;
            console.log(val);
            if (val == 8 || val == 9 || val == 10 || val == 0 || val == 1 || val == 'Backspace' || val == 'Delete' || val == 'Tab') {
                return true;
            }
            return false;
        };

        $("#btnEvalSave").click(function () {
        //function evaluationPopupSave() {
            //alert(-789);
            //$('.spinner').css('display', 'block');
            hideSuccessErrorDiv();
            $.ajax(
                {
                    type: 'POST',
                    url: $("#btnSaveEvaluation").data('url'),
                    data: $('#EvaluationPopup').serialize(),
                    success: function (result) {
                        console.log(result);
                        if (result.success == true) {
                            //window.location.href = newUrl;
                            //$('#dialog').modal('hide');
                            //enableSucessDiv(result.message);

                            alertify.alert(result.message);
                            window.location.href = '/Evaluation/Index'
                        }
                        else {
                            enableErrorDiv(result.message);
                        }
                        $('.spinner').css('display', 'none');
                    },
                });
            //}
        });

        $("#btnEvalSubmit").click(function () {
        //function evaluationPopupSubmit() {
            //$('.spinner').css('display', 'block');
            hideSuccessErrorDiv();
            $.ajax(
                {
                    type: 'POST',
                    url: $("#btnSubmitEvaluation").data('url'),
                    data: $('#EvaluationPopup').serialize(),
                    success: function (result) {
                        console.log(result);
                        if (result.success == true) {
                            //window.location.href = newUrl;
                            //$('#dialog').modal('hide');
                            //enableSucessDiv(result.message);
                            alertify.alert(result.message);
                            window.location.href = '/Evaluation/Index'
                        }
                        else {
                            enableErrorDiv(result.message);
                        }
                        $('.spinner').css('display', 'none');
                    },
                });
        //}
            });

          function Clickfn(id) {
            window.location.href = '/Nomination/Nomination?id=' + id;
            //var url = '@Url.Action("Nomination", "Nomination", new {id = 10010})'; //Generate URL string using razor
           // window.location.href = url.replace('-1', id); //replace ID value
        }


    </script>
}
<style>

    /*move tfoot to next to grid header*/
    tfoot {
        display: table-header-group;
    }

    .ui-datepicker-calendar {
        display: none;
        background: #253c80;
    }
</style>