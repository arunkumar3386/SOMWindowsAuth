@model StarOfTheMonth.Models.DashboardModel
@{
    ViewData["Title"] = "Nomination List";
}
<div class="container py-3 bg-white">
    <div class="b-radius-5 py-3 px-4">
        @*<div class="border-nomination-list b-radius-5 py-3 px-4">*@
        <div class="clearfix mb-4">
            <div class="float-left">
                <h4 id="dashboardHeading"><i class="fas fa-list-ol"></i>&nbsp;&nbsp;Nomination List</h4>
            </div>
            @*<div class="float-right">
                    <button type="button" class="btn btn-outline-excel ml-2"><span class="text-color">Save as Excel</span>&nbsp;&nbsp;&nbsp;<i class="fas fa-file-excel"></i></button>
                </div>*@
        </div>

        <div id="dvFilterSection">
            <div class="clearfix">
                <div class="float-right">
                    <button type="button" class="btn btn-outline-filter ml-2 mb-2" data-toggle="collapse" data-target="#filterBox" aria-expanded="false"
                            aria-controls="filterBox">
                        <span class="text-color"></span>Filter &nbsp;&nbsp;&nbsp;<i class="fas fa-filter"></i>
                    </button>
                </div>
            </div>
            <div class="collapse" id="filterBox">
                <div class="mb-3 mt-2 mx-0 py-2 row bg-light b-radius-5 border">
                    <div class="col">
                        .
                        <div class="form-group required row NomSection nonTQCSection">
                            <label for="StartDate" class="col-sm-2 col-form-label control-label">Select Department:</label>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(m => m.Nom_DeptFilter, Model.Nom_DeptFilterlst, new { @class = "form-control", @id = "Nom_DeptFilter" })
                            </div>
                            <label for="Nom_dateFilter" class="col-sm-2 col-form-label control-label">Select Month & Year:</label>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(m => m.Nom_dateFilter, new { @class = "form-control date-picker", @id = "Nom_dateFilter" })
                            </div>
                            <div class="col-sm-2">
                                <button type="button" id="btnDashFilter" class="btn btn-outline-filter ml-2 mb-2" data-toggle="collapse">Apply</button>
                            </div>
                        </div>
                        <div class="form-group required row NomSection TQCSection">
                            <label for="StartDate" class="col-sm-1 col-form-label control-label">Department:</label>
                            <div class="col-sm-3">
                                @Html.DropDownListFor(m => m.Nom_DeptFilter, Model.Nom_DeptFilterlst, new { @class = "form-control", @id = "Nom_DeptFilter" })
                            </div>
                            <label for="Nom_dateFilter" class="col-sm-1 col-form-label control-label">From:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(m => m.Nom_dateFilter, new { @class = "form-control date-picker", @id = "Nom_dateFilter" })
                            </div>
                            <label for="TO_Nom_dateFilter" class="col-sm-1 col-form-label control-label">To:</label>
                            <div class="col-sm-2">
                                @Html.TextBoxFor(m => m.TO_Nom_dateFilter, new { @class = "form-control date-picker", @id = "TO_Nom_dateFilter" })
                            </div>
                            <div class="col-sm-2">
                                <button type="button" id="btnDashFilter" class="btn btn-outline-filter ml-2 mb-2" data-toggle="collapse">Apply</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="custom-control custom-checkbox mb-3" id="dvReject" style="display:none;">
            <input type="checkbox" class="custom-control-input" id="RejectedCheck" name="example1">
            <label class="custom-control-label" for="RejectedCheck">Rejected Forms</label>
        </div>
        <div id="tblNomination" style="display:none;">
            <div class="table-responsive">
                @*<h6 style="font-weight:bold; text-decoration:underline;">Nomination List</h6>*@
                <div style="width:100%; margin:0 auto;">
                    <table id="NominationGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Action</th>
                                <th>ID</th>
                                <th>Nomination ID</th>
                                <th>Emp.No</th>
                                <th>Name</th>
                                <th>Department</th>
                                <th>Cost</th>
                                <th>Project Start Date</th>
                                <th>Project End Date</th>
                                <th>Status</th>
                                <th>Current Holding Person</th>
                                <th>Created Date</th>

                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>Action</th>
                                <th>ID</th>
                                <th>Nomination ID</th>
                                <th>EmployeeNumber</th>
                                <th>Name</th>
                                <th>Department</th>
                                <th>Cost</th>
                                <th>StartDate</th>
                                <th>EndDate</th>
                                <th>StatusText</th>
                                <th>currentHoldingPerson</th>
                                <th>CreatedDate</th>

                            </tr>
                        </tfoot>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>

        <div id="tblNominationReject" style="display:none;">
            <div class="table-responsive">
                @*<h6 style="font-weight:bold; text-decoration:underline;">Nomination List</h6>*@
                <div style="width:100%; margin:0 auto;">
                    <table id="NominationRejectGrid" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>
                                    <div>
                                        <input type="checkbox" name="select_all" value="1" id="GridSelectAll">
                                        <label for="GridSelectAll"></label>
                                    </div>
                                </th>
                                <th>Sl.No</th>
                                <th>Nomination ID</th>
                                <th>Emp.No</th>
                                <th>Name</th>
                                <th>Department</th>
                                <th>Project Start Date</th>
                                <th>Project End Date</th>
                                <th>Created Date</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th></th>
                                <th>SlNo</th>
                                <th>ID</th>
                                <th>EmployeeNumber</th>
                                <th>Name</th>
                                <th>Department</th>
                                <th>StartDate</th>
                                <th>EndDate</th>
                                <th>CreatedDate</th>
                                <th>Action</th>
                            </tr>
                        </tfoot>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@*ModalPopup ADD Evaluator Start*@
<div class="modal fade" id="addEvaluator" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-brand" id="exampleModalLabel">Add Evaluator to Nomination</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @{Html.RenderPartial("_MessageDiv");}
            <div class="modal-body">
                <form id="frmAssignEval">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-11 my-2">
                                @Html.HiddenFor(model => model.ID, new { htmlAttributes = new { @id = "ID" } })
                                @Html.EditorFor(model => model.EvaluatorNumber, new { htmlAttributes = new { @class = "form-control", @id = "EvaluatorNumber", @placeholder = "Search by employee number" } })
                                @*<span class="req st"> </span>*@
                            </div>
                            <div class="col-md-1">
                                <span class="req st"></span>
                            </div>
                            <div class="col-md-11 my-2">
                                @Html.EditorFor(model => model.EvaluatorName, new { htmlAttributes = new { @class = "form-control", @id = "EvaluatorName", @placeholder = "Search by employee Name" } })
                            </div>
                            <div class="col-md-1">
                                <span class="req st"></span>
                            </div>
                        </div>
                    </div>
                </form>
                </br>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-cancel text-brand" data-dismiss="modal"><span class="text-color">Cancel</span>&nbsp;&nbsp;&nbsp;<i class="fas fa-times"></i></button>
                <button type="button" id="btnAddEvaluator" onclick="saveAssignEvaluator()" class="btn btn-outline-excel text-brand"><span class="text-color">Assign</span> &nbsp;&nbsp;&nbsp;<i class="fas fa-check"></i></button>
            </div>
        </div>
    </div>
</div>
@*ModalPopup ADD Evaluator End*@

<button type="button" style="display:none;" data-toggle="modal" id="btnShowEvaluator" data-target="#addEvaluator">AddEvaluator</button>
<input id="btnNominationGridDetGrid" value="Load" type="hidden" data-url='@Url.Action("LoadNominationDetailsForGrid","Nomination")' />
<input id="btnNominationGridRejectDetGrid" value="Load" type="hidden" data-url='@Url.Action("LoadNominationRejectDetailsForGrid","Nomination")' />
<button style="visibility:hidden;" id="evalNameSearch" data-url='@Url.Action("GetEvaluatorDataByName","Nomination")'></button>
<button style="visibility:hidden;" id="evalNumberSearch" data-url='@Url.Action("GetEvaluatorDataByID","Nomination")'></button>
<input id="btnAssignEvalSave" value="Load" type="hidden" data-url='@Url.Action("assignEvaltorForNomination","Nomination")' />
@section Scripts {
    @*<script src="~/Scripts/jquery-3.4.1.js"></scri*@pt>
    <script>

        function saveAssignEvaluator() {
            $('.spinner').css('display', 'block');
            hideSuccessErrorDiv();
            $.ajax(
                {
                    type: 'POST',
                    url: $("#btnAssignEvalSave").data('url'),
                    data: $('#frmAssignEval').serialize(),
                    success: function (result) {
                        //console.log(result);
                        if (result.success == true) {
                            alertify.alert("SOM Alert", result.message, function () { location.reload(); });
                        }
                        else {
                            enableErrorDiv(result.message);
                        }
                        $('.spinner').css('display', 'none');
                    },
                });
        }

        $(function () {
            $('.date-picker').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'MM yy',
                onClose: function (dateText, inst) {
                    $(this).datepicker('setDate', new Date(inst.selectedYear, inst.selectedMonth, 1));
                }
            });
        });

        $(document).ready(function () {

            var userGrade = '@HttpContext.Current.Session["UserGrade"].ToString()';
            var SOMRole = '@HttpContext.Current.Session["EmpSOMRole"].ToString()';
            var Dept = '@HttpContext.Current.Session["UserDepartment"].ToString()';
            console.log(SOMRole);
            //if (Dept == "1002") {
            //    $('#Nom_DeptFilter').attr('disabled', 'disabled');
            //    $('#Nom_DeptFilter').addClass('input-disabled');
            //}
            //else {
            //    $('#Nom_DeptFilter').removeAttr('readonly', 'readonly');
            //    $('#Nom_DeptFilter').removeClass('input-disabled');
            //}

            if (SOMRole == "1003") {
                $(".nonTQCSection").hide();
                $(".TQCSection").show();
            }
            else {
                $(".TQCSection").hide();
                $(".nonTQCSection").show();
            }

            if (SOMRole == "1001") {
                $("#dvFilterSection").hide();
            }

            if (userGrade =="Admin") {
                $('#dvReject').show();
                $('#RejectedCheck').prop('checked', false);
            }
            else {
                $('#dvReject').hide();
            }

            $("#pageTitle").text("Nomination Details");
            var N_dept = $("#Nom_DeptFilter option:selected").text();
            var N_date = $("#Nom_dateFilter").val();
            var N_TO_sdate = $("#TO_Nom_dateFilter").val();
            //console.log(N_dept + " " + N_date);
            LoadNominationGrid(N_date, N_dept, N_TO_sdate);
            $('.dt-button').addClass('btn btn-primary fas fa-download');

        });

        $("#btnNomFilter").click(function () {
            LoadNominationGrid()
            var N_dept = $("#Nom_DeptFilter option:selected").text();
            var N_date = $("#Nom_dateFilter").val();
            var N_TO_sdate = $("#TO_Nom_dateFilter").val();

            LoadNominationGrid(N_date, N_dept, N_TO_sdate)
        });

        function LoadNominationGrid(_date, _dept, N_TO_sdate) {
            var SOMRole = '@HttpContext.Current.Session["EmpSOMRole"].ToString()';
            //var assignUsr = true;
            //console.log("LoadNominationGrid");
            var N_dept = _dept;
            var N_date = _date;
            var N_To_date = N_TO_sdate;
            spinner_On();
            $.ajax(
                {
                    "url": $("#btnNominationGridDetGrid").data('url'),
                    "type": "POST",
                    "data": { dept: N_dept, date: N_date, toDate: N_To_date},
                    "dataType": "json",
                    success: function (data) {
                        //console.log(data);
                        $('#tblNomination').show();
                        var datatableInstance = $('#NominationGrid').DataTable({
                            data: data,
                            paging: true,
                            bDestroy: true,
                            processing: true,
                            pageLength: 15,
                            order: [],
                            dom: 'Bfrtip',
                            buttons: [
                                {
                                    extend: 'excelHtml5',
                                    text: 'Export As Excel',
                                    title: 'Nomination Details',
                                    exportOptions: {
                                            columns: [1, 2, 3, 4 , 5, 6, 7],
                                        //}
                                        format: {
                                            body: function (data, row, column, node) {
                                                switch (column) {
                                                    case 5:
                                                        return moment(data, 'DD.MM.YYYY').format('DD/MM/YYYY')
                                                        break
                                                    case 6:
                                                        return moment(data, 'DD.MM.YYYY').format('DD/MM/YYYY')
                                                        break
                                                    default:
                                                        return data
                                                        break
                                                }
                                            }
                                        }
                                    }
                                }
                                //'copy', 'csv', 'excel', 'pdf'
                            ],
                            columns: [
                                {
                                    'data': '',
                                    'sortable': false,
                                    'render': function json(data, type, full, meta) {
                                        //console.log(full);
                                        if (SOMRole == "1003") {
                                            if (full.IsEvalatorAssigned) {
                                                return "<a style='cursor:pointer;' onclick='Clickfn(" + full.ID + ")'><i class='fas fa-eye'></i></a>" + " "
                                                    + "<a style='cursor:pointer; color:red;'onclick='PdfDownload()' href='/Nomination/GeneratePDF?ID=" + full.NominationID + "'><i class='fas fa-file-pdf'></i></a>";
                                            }
                                            else {
                                                return "<a style='cursor:pointer;' onclick='Clickfn(" + full.ID + ")'><i class='fas fa-eye'></i></a>" + " "
                                                    + "<a style='cursor:pointer; color:red;'onclick='PdfDownload()' href='/Nomination/GeneratePDF?ID=" + full.NominationID + "'><i class='fas fa-file-pdf'></i></a>" + "  "
                                                    + "<a style='cursor:pointer; color:green;' data-toggle='tooltip' title='Assign Evaluator' onclick='AssignEvaluator(" + full.ID + ")'> <i class='fas fa-user-plus'></i></a> ";

                                                //return "<a style='cursor:pointer;'  data-toggle='tooltip' title='View Nomination' onclick='Clickfn(" + full.ID + ")'><i class='fas fa-eye'></i></a>"
                                                //     + "  " + "<a style='cursor:pointer;color:green;' data-toggle='tooltip' title='Assign Evaluator' onclick='AssignEvaluator(" + full.ID + ")'><i class='fas fa-user-plus'></i></a>";
                                            }
                                        }
                                        else {
                                            return "<a style='cursor:pointer;' onclick='Clickfn(" + full.ID + ")'><i class='fas fa-eye'></i></a>" + " "
                                                + "<a style='cursor:pointer; color:red;'onclick='PdfDownload()' href='/Nomination/GeneratePDF?ID=" + full.NominationID + "'><i class='fas fa-file-pdf'></i></a>";
                                        }

                                        //return "<a asp-controller='Nomination' asp-action='Index'>"+full.EmployeeID+"</a>"
                                    }
                                },
                                { 'data': 'ID', "visible": false, },
                                { 'data': 'NominationID' },
                                { 'data': 'EmployeeNumber' },
                                { 'data': 'Name' },
                                { 'data': 'Department' },
                                { 'data': 'Cost' },
                                { 'data': 'StartDate_ForGrid' },
                                { 'data': 'EndDate_ForGrid' },
                                { 'data': 'StatusText' },
                                { 'data': 'currentHoldingPerson' },
                                { 'data': 'CreatedDate_ForGrid', "visible": false, },

                                
                            ],

                            //"fnRowCallback": function (nRow, aData, iDisplayIndex) {
                            //    $("td:first", nRow).html(iDisplayIndex + 1);
                            //    return nRow;
                            //},
                        });

                        // To decide it's textbox or Select Filter
                        $("#NominationGrid tfoot th").each(function (i) {
                            var title = $('#NominationGrid thead th').eq($(this).index()).text();
                            if (title == "Emp.No" || title == "Name" || title == "Department" || title == "Project Start Date" || title == "Project End Date"
                                || title == "Nomination ID" || title == "Created Date" || title == "Cost" || title == "Status" || title == "Current Holding Person" ) {
                                $(this).html('<div class="search"><input type="text" class="form-control" placeholder="Search"></div>');
                                //$(this).html('<div class="search"><input type="text" class="form-control" placeholder="Search ' + title + '"></div>');
                            }
                            else if (title == "Sl.No" || title == "ID" ) {
                                $(this).html("");
                            }
                            else {
                                $(this).html('<input type="button" class="btn btn-primary" value="Clear" onclick="clearSearch()"/>');
                            }
                        });

                        // Filter : Textbox keyup Action...
                        datatableInstance.columns().every(function () {
                            var dataTableColumn = this;
                            $(this.footer()).find('input').on('keyup change', function () {
                                //console.log(this.value);
                                dataTableColumn.search(this.value).draw();
                            });
                        });
                        spinner_Off();
                    },
                    error: function (json) {
                        spinner_Off();
                    }
                });
        }

        // Handle click on "Select all" control
        $('#GridSelectAll').on('click', function () {
            // Get all rows with search applied
            var table = $('#NominationRejectGrid').DataTable();
            var rows = table.rows({ 'search': 'applied' }).nodes();
            // Check/uncheck checkboxes for all rows in the table
            $('input[type="checkbox"]', rows).prop('checked', this.checked);
        });

        // Handle click on checkbox to set state of "Select all" control
        $('#NominationRejectGrid tbody').on('change', 'input[type="checkbox"]', function () {
            // If checkbox is not checked
            //console.log(1);
            if (!this.checked) {
                var el = $('#GridSelectAll').get(0);
                // If "Select all" control is checked and has 'indeterminate' property
                if (el && el.checked && ('indeterminate' in el)) {
                    // Set visual state of "Select all" control
                    // as 'indeterminate'
                    el.indeterminate = true;
                }
            }
        });

        function PdfDownload() {
            alertify.alert("SOM Alert","Nomination PDF file will be downloaded shortly");
        }

        function LoadNominationRejectListGrid(_date, _dept) {
            var N_dept = _dept;
            var N_date = _date;
            spinner_On();
            $.ajax(
                {
                    "url": $("#btnNominationGridRejectDetGrid").data('url'),
                    "type": "POST",
                    "data": { dept: N_dept, date: N_date },
                    "dataType": "json",
                    success: function (data) {
                        //console.log(data);
                        $('#tblNominationReject').show();
                        var datatableInstance = $('#NominationRejectGrid').DataTable({
                            data: data,
                            paging: true,
                            bDestroy: true,
                            processing: true,
                            pageLength: 15,
                            order: [],
                            dom: 'Bfrtip',
                            buttons: [
                                {
                                    extend: 'excelHtml5',
                                    text: 'Export As Excel',
                                    title: 'Nomination Details',
                                    exportOptions: {
                                        columns: [1, 2, 3, 4, 5, 6, 7],
                                        //}
                                        format: {
                                            body: function (data, row, column, node) {
                                                switch (column) {
                                                    case 5:
                                                        return moment(data, 'DD.MM.YYYY').format('DD/MM/YYYY')
                                                        break
                                                    case 6:
                                                        return moment(data, 'DD.MM.YYYY').format('DD/MM/YYYY')
                                                        break
                                                    default:
                                                        return data
                                                        break
                                                }
                                            }
                                        }
                                    }
                                }
                                //'copy', 'csv', 'excel', 'pdf'
                            ],
                            columns: [
                                { 'data': '' },
                                { 'data': 'SlNo', "visible": false, },
                                { 'data': 'NominationID' },
                                { 'data': 'EmployeeNumber' },
                                { 'data': 'Name' },
                                { 'data': 'Department' },
                                { 'data': 'StartDate_ForGrid' },
                                { 'data': 'EndDate_ForGrid' },
                                { 'data': 'CreatedDate_ForGrid' },
                                {
                                    'data': '',
                                    'sortable': false,
                                    'render': function json(data, type, full, meta) {

                                        //return "<i  class='fas fa-eye' style='cursor:pointer;' onclick=ViewNomData('" + full.EmployeeID + "'); ></i>";
                                        //var binding = "Url.Action('Nomination','Nomination', new { id ='" + full.ID+"' })";
                                        //return "<a class='fas fa-eye' style='cursor:pointer;' href='" + binding + "'></a>";
                                        //return "<a  style='cursor:pointer;' href='/Login/Nomination/Nomination/" + full.ID + "'><i class='fas fa-eye'></i></a>";
                                        return "<a style='cursor:pointer;' onclick='Clickfn(" + full.ID + ")'><i class='fas fa-eye'></i></a>";
                                        //return "<a asp-controller='Nomination' asp-action='Index'>"+full.EmployeeID+"</a>"
                                    }
                                },
                            ],

                            'columnDefs': [{
                                'targets': 0,
                                'searchable': false,
                                'orderable': false,
                                'className': 'dt-body-center',
                                'render': function (data, type, full, meta) {

                                    return '<div><input type="checkbox" id="id_' + full.ID + '" value="' + full.ID + '"> <label  for="id_' + full.ID + '"></label> </div>';
                                }
                            }],

                            //"fnRowCallback": function (nRow, aData, iDisplayIndex) {
                            //    $("td:first", nRow).html(iDisplayIndex + 1);
                            //    return nRow;
                            //},
                        });

                        // To decide it's textbox or Select Filter
                        $("#NominationRejectGrid tfoot th").each(function (i) {
                            var title = $('#NominationRejectGrid thead th').eq($(this).index()).text();
                            //console.log(title);
                            if (title == "Emp.No" || title == "Name" || title == "Department" || title == "Project Start Date" || title == "Project End Date"
                                || title == "Nomination ID" || title == "Created Date" ) {
                                $(this).html('<div class="search"><input type="text" class="form-control" placeholder="Search"></div>');
                                //$(this).html('<div class="search"><input type="text" class="form-control" placeholder="Search ' + title + '"></div>');
                            }
                            else if (title == "Sl.No" || title == "ID" || title.trim() == "") {
                                $(this).html("");
                            }
                            else {
                                $(this).html('<input type="button" class="btn btn-primary" value="Clear" onclick="clearSearch()"/>');
                            }
                        });

                        // Filter : Textbox keyup Action...
                        datatableInstance.columns().every(function () {
                            var dataTableColumn = this;
                            $(this.footer()).find('input').on('keyup change', function () {
                                //console.log(this.value);
                                dataTableColumn.search(this.value).draw();
                            });
                        });
                        spinner_Off();
                    },
                    error: function (json) {
                        spinner_Off();
                    }
                });
        }

        function AssignEvaluator(id) {
           //alertify.alert(id);
            $("#btnShowEvaluator").trigger("click");
            $("#ID").val(id);
            $("#EvaluatorName").val("");
            $("#EvaluatorNumber").val("");
        }

        function Clickfn(id) {
            window.location.href = '@Url.Action("Nomination", "Nomination")?id=' +id;
            //var url = '@Url.Action("Nomination", "Nomination", new {id = 10010})'; //Generate URL string using razor
           // window.location.href = url.replace('-1', id); //replace ID value
        }

        function clearSearch() {
            var table = $("#NominationGrid").DataTable();
            table.search('').columns().search('').draw();
            $(".search input[type='text']").val("");
        }

        $("#RejectedCheck").change(function () {
            var valu = $('#RejectedCheck').prop('checked');
            if (valu == true) {
                $('#tblNomination').hide();
                $('#tblNominationReject').show();
                var N_dept = $("#Nom_DeptFilter option:selected").text();
                var N_date = $("#Nom_dateFilter").val();
                LoadNominationRejectListGrid(N_date, N_dept);
            }
            else {
                $('#tblNomination').show();
                $('#tblNominationReject').hide();
                var N_dept = $("#Nom_DeptFilter option:selected").text();
                var N_date = $("#Nom_dateFilter").val();
                var N_TO_sdate = $("#TO_Nom_dateFilter").val();
                LoadNominationGrid(N_date, N_dept, N_TO_sdate);
            }
        });

        $("#EvaluatorName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: $("#evalNameSearch").data('url'),
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            //this.console.log(item);
                            return item;
                            //return { label: item.EmployeeID, value: item.Name };
                        }))
                    }
                })
            },
            select: function (e, i) {
                //console.log(i);
                var result = i.item.val;
                var splt = result.split("###");
                $("#EvaluatorNumber").val(splt[0]);
            },
            minLength: 1,
            messages: {
                noResults: "", results: ""
            }
        });

        $("#EvaluatorNumber").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: $("#evalNumberSearch").data('url'),
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            //this.console.log(item);
                            return item;
                            //return { label: item.EmployeeID, value: item.Name };
                        }))
                    }
                })
            },
            select: function (e, i) {
                //console.log(i);
                var result = i.item.val;
                $("#EvaluatorName").val(result);
            },
            minLength: 1,
            messages: {
                noResults: "", results: ""
            }
        });

    </script>
}
<style>

    /*move tfoot to next to grid header*/
    tfoot {
        display: table-header-group;
    }

    .ui-datepicker-calendar {
        display: none;
        background: #253c80;
    }

    .ui-autocomplete {
        z-index: 5000 !important
    }
</style>
