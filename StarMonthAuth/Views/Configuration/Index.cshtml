@model StarOfTheMonth.Models.ConfigurationModel

@{
    ViewData["Title"] = "Settings";
}
<div class="container py-3 bg-white">
    <div class="b-radius-5 py-3 px-4">
        @*<div class="border-nomination-list b-radius-5 py-3 px-4">*@
        <div class="clearfix mb-4">
            <div class="float-left">
                <h4 id="dashboardHeading"><i class="fas fa-cog"></i>&nbsp;&nbsp;Settings</h4>
            </div>
            @*<div class="float-right">
                    <button type="button" class="btn btn-outline-excel ml-2"><span class="text-color">Save as Excel</span>&nbsp;&nbsp;&nbsp;<i class="fas fa-file-excel"></i></button>
                </div>*@
        </div>


        <div id="dvConfiguration" style="display:none;">
            <div class="table-responsive">
                <div style="width:100%; margin:0 auto;">
                    <table id="ConfigurationTbl" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Sl.No</th>
                                <th>ID</th>
                                <th>Module</th>
                                <th>Type</th>
                                <th>Configuration</th>
                                <th>Value</th>
                                <th>IsActive</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>SlNo</th>
                                <th>ID</th>
                                <th>Module</th>
                                <th>Type</th>
                                <th>Description</th>
                                <th>Value</th>
                                <th>Action</th>
                            </tr>
                        </tfoot>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@*ModalPopup Edit Start*@
<a href="#" style="display:none;" id="ConfigurationEditModal" data-toggle="modal" data-target="#editConfigurationModal">Edit values</a>

<div class="modal fade" id="editConfigurationModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-brand" id="exampleModalLabel">Edit Configuration</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="frmConfiguration">
                @{Html.RenderPartial("_MessageDiv");}
                @Html.HiddenFor(m => m.ID, new { @id = "ID" })
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row">
                            <div class="col-md-4 my-3">Description</div>
                            <div class="col-md-8 my-2">
                                @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @id = "Description", @readonly = "readonly" })
                            </div>
                            <div class="col-md-4 my-3 Noemail">Value<span class="req st"> </span></div>
                            <div class="col-md-8 my-2 Noemail">
                                @Html.TextBoxFor(m => m.Value, new { @class = "form-control", @id = "Value" })
                            </div>
                            <div class="col-md-4 my-3 email">SMTP<span class="req st"> </span></div>
                            <div class="col-md-8 my-2 email">
                                @Html.TextBoxFor(m => m.SMTP, new { @class = "form-control", @id = "SMTP" })
                            </div>
                            <div class="col-md-4 my-3 email">Port No<span class="req st"> </span></div>
                            <div class="col-md-8 my-2 email">
                                @Html.TextBoxFor(m => m.PortNo, new { @class = "form-control", @id = "PortNo" })
                            </div>
                            <div class="col-md-4 my-3 email">From User ID<span class="req st"> </span></div>
                            <div class="col-md-8 my-2 email">
                                @Html.TextBoxFor(m => m.FromUserID, new { @class = "form-control", @id = "FromUserID" })
                            </div>
                            <div class="col-md-4 my-3 email">Password<span class="req st"> </span></div>
                            <div class="col-md-8 my-2 email">
                                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @id = "Password" })
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-cancel text-brand" data-dismiss="modal"><span class="text-color">Cancel</span>&nbsp;&nbsp;&nbsp;<i class="fas fa-times"></i></button>
                <button type="button" class="btn btn-outline-save text-brand" onclick="ConfigurationPopupSave()"><span class="text-color">Save Changes</span> &nbsp;&nbsp;&nbsp;<i class="fas fa-save"></i></button>
            </div>
        </div>
    </div>
</div>
@*ModalPopup Edit End*@
<input id="btnConfigurationDetGrid" value="Load" type="hidden" data-url='@Url.Action("LoadConfigurationDetailsForGrid","Configuration")' />
<input id="btnConfigurationPopup" value="Load" type="hidden" data-url='@Url.Action("ConfigurationPopupValues","Configuration")' />
<input id="btnConfigurationPopupSave" value="Load" type="hidden" data-url='@Url.Action("ConfigurationPopupSave","Configuration")' />

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#pageTitle").text("Settings");
            LoadConfigurationGrid();
        });

        $("#btnFilter").click(function () {
            LoadConfigurationGrid();
        });

        function LoadConfigurationGrid() {
            //var N_dept = $("#DeptFilter option:selected").text();
            //var N_date = $("#DateFilter option:selected").text();
            spinner_On();
            $.ajax(
                {
                    "url": $("#btnConfigurationDetGrid").data('url'),
                    "type": "POST",
                    //"data": { dept: N_dept, date: N_date },
                    "dataType": "json",
                    success: function (data) {
                        //console.log(data);
                        $('#dvConfiguration').show();
                        var datatableInstance = $('#ConfigurationTbl').DataTable({
                            data: data,
                            paging: true,
                            bDestroy: true,
                            processing: true,
                            pageLength: 15,
                            order: [],
                            columns: [
                                { 'data': 'SlNo' },
                                { 'data': 'ID', "visible": false, },
                                { 'data': 'Module', "visible": false, },
                                { 'data': 'Type', "visible": false, },
                                { 'data': 'Description' },
                                { 'data': 'Value', 'class': 'dataTableColumnWordBreak' },
                                { 'data': 'IsActive', "visible": false, },
                                {
                                    'data': '',
                                    'sortable': false,
                                    'render': function json(data, type, full, meta) {
                                        return "<i onclick='showConfigurationPopup(" + full.ID + ")' class='fas fa-edit' style='cursor:pointer;'></i>";
                                    }
                                },
                            ],
                        });

                        // To decide it's textbox or Select Filter
                        $("#ConfigurationTbl tfoot th").each(function (i) {
                            var title = $('#ConfigurationTbl thead th').eq($(this).index()).text();
                            if (title == "ID" || title == "Module" || title == "Type" || title == "Configuration" || title == "Value" || title == "IsActive") {
                                $(this).html('<div class="search"><input type="text" class="form-control" placeholder="Search"></div>');
                                //$(this).html('<div class="search"><input type="text" class="form-control" placeholder="Search ' + title + '"></div>');
                            }
                            else if (title == "Sl.No") {
                                $(this).html("");
                            }
                            else {
                                $(this).html('<input type="button" class="btn btn-primary" value="Clear" onclick="clearSearch()"/>');
                            }
                        });

                        // Filter : Textbox keyup Action...
                        datatableInstance.columns().every(function () {
                            var dataTableColumn = this;
                            $(this.footer()).find('input').on('keyup change', function () {
                                //console.log(this.value);
                                dataTableColumn.search(this.value).draw();
                            });
                        });
                        spinner_Off();
                    },
                    error: function (json) {
                        spinner_Off();
                    }
                });
        }

        function clearSearch() {
            var table = $("#ConfigurationTbl").DataTable();
            table.search('').columns().search('').draw();
            $(".search input[type='text']").val("");
        }

        function showConfigurationPopup(ID) {
            //alert(ID);
            $.ajax({
                type: "Post",
                url: $("#btnConfigurationPopup").data('url'),
                data: '{ID: ' + ID + ' }',
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    console.log(response);
                    $("#ConfigurationEditModal").trigger("click");
                    console.log(response.data.ID);

                    $('#ID').val(response.data.ID);
                    //$('#Module').val(response.data.Module);
                    //$('#Type').val(response.data.Type);
                    $('#Description').val(response.data.Description);

                    if (response.data.ID == "18") {
                        $(".email").show();
                        $(".Noemail").hide();
                        $('#SMTP').val(response.data.SMTP);
                        $('#PortNo').val(response.data.PortNo);
                        $('#FromUserID').val(response.data.FromUserID);
                        $('#Password').val(response.data.Password);
                    }
                    else {
                        $(".email").hide();
                        $(".Noemail").show();
                        $('#Value').val(response.data.Value);
                    }


                    // $('#IsActive').val(response.data.IsActive);

                },
                failure: function (response) {
                    alertify.alert("SOM Alert", response.responseText, function () { });
                },
                error: function (response) {
                    alertify.alert("SOM Alert", response.responseText, function () { });
                }
            });
        }

        function ConfigurationPopupSave() {
            //alert(-789);
            $('.spinner').css('display', 'block');
            hideSuccessErrorDiv();
            $.ajax(
                {
                    type: 'POST',
                    url: $("#btnConfigurationPopupSave").data('url'),
                    data: $('#frmConfiguration').serialize(),
                    success: function (result) {
                        console.log(result);
                        if (result.success == true) {
                            //window.location.href = newUrl;
                            //$('#dialog').modal('hide');
                            alertify.alert("SOM Alert", result.message, function () { location.reload(); });
                            //enableSucessDiv(result.message);
                        }
                        else {
                            enableErrorDiv(result.message);
                        }
                        $('.spinner').css('display', 'none');
                    },
                });
        }

    </script>
}

<style>
    /*move tfoot to next to grid header*/
    tfoot {
        display: table-header-group;
    }

    .dataTableColumnWordBreak {
        word-wrap: break-word !important;
        white-space: normal !important;
    }
</style>
