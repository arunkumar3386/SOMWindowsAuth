@model StarOfTheMonth.Models.DashboardModel
@{
    ViewData["Title"] = "Dashboard";
    int SOM_count = int.Parse(@HttpContext.Current.Session["SOM_Month_Count"].ToString());
}
<div id="dialog" style="display:none"></div>
@{Html.RenderPartial("_MessageDiv");}
<div class="container py-3 bg-white">
    <!--  <div class="border-green bg-light b-radius-5 bg-light-green px-4 py-1">-->
    <div class="px-4 py-1">
        <div id="carouselStarOfTheMonth" class="carousel slide" data-ride="carousel">

            @if (SOM_count == 0)
            {
                <ol class="carousel-indicators">
                    <li data-target="#carouselStarOfTheMonth" data-slide-to="0" class="active"></li>
                </ol>

                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img class="d-block w-100" src="../images/slider%20image.jpg" alt="First slide">
                        <span class="title">Star of the month</span>
                    </div>
                </div>
            }

            @if (SOM_count != 0)
            {
                <ol class="carousel-indicators">
                    @for (int ic = 0; ic < SOM_count; ic++)
                    {
                        if (ic == 0)
                        {
                            <li data-target="#carouselStarOfTheMonth" data-slide-to='@ic' class="active"></li>
                        }
                        else
                        {
                            <li data-target="#carouselStarOfTheMonth" data-slide-to='@ic'></li>
                        }
                    }
                </ol>
            }

            @if (SOM_count != 0)
            {
                <div class="carousel-inner">
                    @for (int i = 0; i < SOM_count; i++)
                    {
                        var sm = "SOM_Month_" + i;
                        sm = @HttpContext.Current.Session[sm].ToString();
                        var sIM = "SOM_Image_" + i;
                        sIM = @HttpContext.Current.Session[sIM].ToString();
                        string id = "SOM_Month_" + i;

                            <div class="carousel-item" alt=@i id=@id>
                                <img class="d-block w-100" src="../images/slider%20image.jpg">
                                <span class="title">Star of the month</span>
                                <span class="month">@sm</span>
                                <img src="@sIM" class="star-pic" />
                            </div>
                       
                    }
                </div>
            }

            <a class="carousel-control-prev" href="#carouselStarOfTheMonth" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselStarOfTheMonth" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
    @Html.HiddenFor(m => m.participatedCount.TotalEmpCount, new { @id = "TotalEmpCount" })
    @Html.HiddenFor(m => m.participatedCount.ParticipatedEmpCount, new { @id = "ParticipatedEmpCount" })
    @Html.HiddenFor(m => m.participatedCount.WinnnerCount, new { @id = "WinnnerCount" })
    <br />
    <br />
    <div class="clearfix" style="margin:20px;">
        <div class="float-left" style="display:none;">
            <select id="entriesShow" class="form-control d-inline">
                <option selected>Show 15 entries</option>
                <option>Show 20 entries</option>
                <option>Show 25 entries</option>
                <option>Show 30 entries</option>
            </select>
        </div>
        <div class="float-right">
            <span style="display:none;">
                <label for="searchList">Search</label>
                <input type="search" id="searchList" name="List" placeholder="Enter Keyword" class="px-2">
            </span>
            <button type="button" class="btn btn-outline-filter ml-2 mb-2" data-toggle="collapse" data-target="#filterBox" aria-expanded="false" aria-controls="filterBox"><span class="text-color"></span>Filter &nbsp;&nbsp;&nbsp;<i class="fas fa-filter"></i></button>
        </div>
    </div>
    <div class="collapse" id="filterBox" style="margin:20px;">
        <div class="mb-3 mt-2 mx-0 py-2 row bg-light b-radius-5 border">
            <div class="col">
                <div class="form-group required row NomSection">
                    <label for="DeptFilter" class="col-sm-2 col-form-label control-label"> Department: </label>
                    <div class="col-sm-2">
                        @Html.DropDownListFor(m => m.DeptFilter, Model.DeptFilterlst, new { @class = "form-control", @id = "DeptFilter" })
                    </div>
                    <label for="From_date" class="col-sm-1 col-form-label control-label">From:</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(m => m.From_Date, new { @class = "form-control date-picker", @id = "From_Date" })
                    </div>
                    <label for="TO_date" class="col-sm-1 col-form-label control-label">To:</label>
                    <div class="col-sm-2">
                        @Html.TextBoxFor(m => m.To_Date, new { @class = "form-control date-picker", @id = "To_Date" })
                    </div>
                    <div class="col-sm-2">
                        <button type="button" id="btnDashFilter" class="btn btn-outline-filter ml-2 mb-2" data-toggle="collapse">Apply</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row my-5 tab-nav" style="margin:20px;">
        <div class="col-sm-6">
            <div class="card evaluation-list-tab" id="dvEvaluation">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-list-ol"></i>&nbsp;&nbsp;Total Strength</h5>
                    <p class="card-text" id="DispTotalEmpCount">@Html.ValueFor(m => m.participatedCount.TotalEmpCount)</p>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="card nomination-list-tab" id="dvNomination">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-list-ol"></i>&nbsp;&nbsp;Nominations Count</h5>
                    <p class="card-text" id="DispParticipatedEmpCount">@Html.ValueFor(m => m.participatedCount.ParticipatedEmpCount)</p>
                </div>
            </div>
        </div>
        @*<div class="col-sm-4" style="cursor:pointer;" id="dvWinner">
                <div class="card award-winners-tab">
                    <div class="card-body">
                        <h5 class="card-title"><i class="fas fa-trophy"></i>&nbsp;&nbsp;Award Winners</h5>
                        <p class="card-text">09</p>
                    </div>
                </div>
            </div>*@
    </div>
    <div class="">
        <div id="piechart_3d" class="pie-chart-report"></div>
    </div>
</div>
<input id="btnDashboardDataFilter" value="Load" type="hidden" data-url='@Url.Action("LoadDashboardDetailsForFilter","Dashboard")' />
@section Scripts {
    
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>

        $("#btnDashFilter").click(function () {
            spinner_On();
            excuteFilter();
            spinner_Off();
        });

        $(function () {
            $('.date-picker').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'MM yy',
                onClose: function (dateText, inst) {
                    $(this).datepicker('setDate', new Date(inst.selectedYear, inst.selectedMonth, 1));
                }
            });
        });

        $(document).ready(function () {

            spinner_On();
            $("#pageTitle").text("Dashboard");
            excuteFilter();
            $("#SOM_Month_0").addClass('active');
            spinner_Off();
        });

        function excuteFilter() {
            var _dept = $("#DeptFilter option:selected").text();
            var _fdate = $("#From_Date").val();
            var _Tdate = $("#To_Date").val();
            if (_Tdate == "") {
                alertify.alert("SOM Alert", "Plese choose End Date");
                return;
            }
            var A = moment("01-" + _fdate.replace(" ", "-"));
            var B = moment("28-" + _Tdate.replace(" ", "-"));
            //console.log(A + " - " + B);
            //console.log(A.diff(B, 'days'))
            if (A.diff(B, 'days') > 1) {
                alertify.alert("SOM Alert", "Plese choose To Date greater than From Date");
                return;
            }
            applyFilter(_dept, _fdate, _Tdate);
        }

        function applyFilter(dept, fdate, tDate) {
            $.ajax({
                type: "Post",
                url: $("#btnDashboardDataFilter").data('url'),
                data: { dept: dept, fromDate: fdate, toDate: tDate },
                //contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (response) {
                    //console.log(response);
                    //console.log(response.message.ParticipatedEmpCount);
                    var tot = response.message.TotalEmpCount;
                    var par = response.message.ParticipatedEmpCount;
                    $("#DispParticipatedEmpCount").text(response.message.ParticipatedEmpCount);
                    $("#DispTotalEmpCount").text(response.message.TotalEmpCount);

                    DrawPieChart(tot, par);
                },
                failure: function (response) {
                    alertify.alert("SOM Alert", response.responseText, function () { });
                },
                error: function (response) {
                    alertify.alert("SOM Alert", response.responseText, function () { });
                }
            });
        }

        function DrawPieChart(Tot, par) {
            google.charts.load("current", { packages: ["corechart"] });
            google.charts.setOnLoadCallback(drawChart);
            function drawChart() {
                //console.log(Tot + "-" + par);
                var data = google.visualization.arrayToDataTable([
                    ['Task', 'Counts'],
                    ['Total Strength', Tot],
                    ['Nominations count', par],
                    //['Total', Tot],
                    //['Participated', par],
                    //['Winners', win],
                ]);
                var options = {
                    //   title: 'Reports',
                    is3D: true,
                };
                var chart = new google.visualization.PieChart(document.getElementById('piechart_3d'));
                chart.draw(data, options);
            }
        }
    </script>
    <style>

        .ui-datepicker-calendar {
            display: none;
            background: #253c80;
        }

        #carouselStarOfTheMonth .carousel-item span.title {
            font-family: 'Gotham bold', Arial, sans-serif;
            position: absolute;
            top: 18%;
            left: 10%;
            font-size: 64px;
            color: white;
            font-weight: 600;
            text-shadow: 5px 5px 10px #333;
        }

        #carouselStarOfTheMonth .carousel-item span.month {
            font-family: 'Gotham bold', Arial, sans-serif;
            position: absolute;
            top: 50%;
            left: 10%;
            font-size: 64px;
            color: #4caf50;
            font-weight: 600;
            text-shadow: 5px 5px 10px #333;
        }

        #carouselStarOfTheMonth .carousel-item img.star-pic {
            position: absolute;
            width: 300px;
            height: 300px;
            border: 10px solid #ffffff;
            border-radius: 50%;
            top: 13%;
            right: 7%;
        }

        .form-group {
            margin-bottom: 0.2rem;
        }
    </style>
}
